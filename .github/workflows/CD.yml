name: Continuous Delivery

on:
  push:
    branches:
      - develop

jobs:
  export-game:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
    name: Export Game
    steps:
    - name: checkout
      uses: actions/checkout@v2.3.1
      with:
        fetch-depth: 0
    - name: download templates
      run: |
        wget --no-verbose https://downloads.tuxfamily.org/godotengine/3.3.2/mono/Godot_v3.3.2-stable_mono_export_templates.tpz
        mkdir -p ~/templates-3.3.2.stable.mono
        unzip -q Godot_v3.3.2-stable_mono_export_templates.tpz -d ~/templates-3.3.2.stable.mono
        mkdir -p /home/runner/.local/share/godot/templates/3.3.2.stable.mono
        mv ~/templates-3.3.2.stable.mono/templates/* /home/runner/.local/share/godot/templates/3.3.2.stable.mono
    - name: download godot
      run: |
        wget --no-verbose https://downloads.tuxfamily.org/godotengine/3.3.2/mono/Godot_v3.3.2-stable_mono_linux_headless_64.zip
        unzip -q Godot_v3.3.2-stable_mono_linux_headless_64.zip
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: create out directory
      run: |
        mkdir -p ${{ github.workspace }}/out
    - name: export
      run: |
        ${{ github.workspace }}/Godot_v3.3.2-stable_mono_linux_headless_64/Godot_v3.3.2-stable_mono_linux_headless.64 --verbose --path ${{ github.workspace }} --export "Windows Desktop"
    - name: upload mono's logs
      uses: actions/upload-artifact@v2
      with:
        name: mono-logs
        path: /home/runner/.local/share/godot/mono/mono_logs
    - name: upload export
      uses: actions/upload-artifact@v2
      with:
        name: export
        path: ${{ github.workspace }}/out
